# configuracao que habilita a parte seguranca https para producao
algamoney.seguranca.enable-https=true


# Tutorial instalacão Heroku, apos baixar e instalar o CLi, abrir cmd entrar no diretorio do projeto e configurar o login
# com o comando -> heroku login
# Passo 2 , fazer commit da aplicação
# Passo 3 , criar aplicacao -> heroku create algamoney-api, ele vai devolver o endereço da uri :
# https://algamoney-api-5bf8be50b408.herokuapp.com/
# Passo 4 , criar banco de dados mysql -> heroku addons:create jawsdb , ele vai devolver
# Use heroku addons:info jawsdb-spherical-76692 to check creation progress Use heroku addons:docs jawsdb to view documentation
# Passo 5, comando para pegar as informacoes de uri do banco -> heroku config:get JAWSDB_URL , ele vai devolver :
# mysql://bk6um1b01tqus7xw:kcm6s0sw9htljo2r@j1r4n2ztuwm0bhh5.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/r5l9dov5u9tol859
# Passo 6 , configurar a uri do banco de dados ->
# heroku config:set JDBC_DATABASE_URL=jdbc:mysql://j1r4n2ztuwm0bhh5.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/r5l9dov5u9tol859 JDBC_DATABASE_USERNAME=bk6um1b01tqus7xw JDBC_DATABASE_PASSWORD=kcm6s0sw9htljo2r
# Passo 7 , o comando heroku config retorna todas as variaveis criadas
# Passo 8 , subir o projeto para o heroku -> git push heroku master
# Passo 9 , para acompanhar o log -> heroku logs --tail

spring.datasource.url={JDBC_DATABASE_URL}
spring.datasource.username={JDBC_DATABASE_USERNAME}
spring.datasource.password={JDBC_DATABASE_PASSWORD}

algamoney.origin-permitida=https://algamoney-angular.herokuapp.com


